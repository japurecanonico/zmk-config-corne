/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        copy_macro: copy_macro {
            compatible = "zmk,behavior-macro";
            label = "COPY_MACRO";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp C>;
        };
        paste_macro: paste_macro {
            compatible = "zmk,behavior-macro";
            label = "PASTE_MACRO";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp V>;
        };
        cut_macro: cut_macro {
            compatible = "zmk,behavior-macro";
            label = "CUT_MACRO";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &kp X>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorak_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
   &kp TAB      &kp SLASH  &kp COMMA    &kp DOT  &kp P      &kp Y      &kp F  &kp G     &kp C  &kp R  &kp L        &kp ESC
&kp LSHIFT          &kp A      &kp O      &kp E  &kp U      &kp I      &kp D  &kp H     &kp T  &kp N  &kp S     &kp RSHIFT
  &kp LGUI  &kp SEMICOLON      &kp Q      &kp J  &kp K      &kp X      &kp B  &kp M     &kp W  &kp V  &kp Z  &kp RIGHT_ALT
                                      &kp LCTRL  &mo 2  &kp SPACE    &kp RET  &mo 1  &kp BSPC
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp CARET        &kp SQT  &kp GRAVE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MULTIPLY        &none  &trans
&trans      &none  &kp BACKSLASH   &kp EXCL      &kp LEFT_BRACKET      &kp RIGHT_BRACKET    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6        &kp MINUS        &none  &trans
&trans   &kp HASH         &kp AT   &kp DLLR        &kp LEFT_BRACE        &kp RIGHT_BRACE    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3        &kp EQUAL  &kp PERCENT  &trans
                                     &trans                &trans              &kp SPACE            &kp RET           &trans       &kp DELETE
            >;
        };

        arrow_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp PG_UP     &none      &kp UP        &none      &kp HOME     &kp F1   &kp F2      &kp F3   &kp F4  &kp PRINTSCREEN  &none
&trans  &kp PG_DN  &kp LEFT    &kp DOWN    &kp RIGHT       &kp END     &kp F5   &kp F6      &kp F7   &kp F8            &none  &none
&trans      &mo 3     &none  &cut_macro  &copy_macro  &paste_macro     &kp F9  &kp F10     &kp F11  &kp F12            &mo 3  &none
                                 &trans       &trans     &kp SPACE    &kp RET   &trans  &kp DELETE
            >;
        };

        control_layer {
            bindings = <
&trans  &none  &kp C_BRI_UP  &kp C_NEXT  &kp C_VOL_UP  &bt BT_NXT      &none   &none   &none  &none  &none  &none
&trans  &none  &kp C_BRI_DN  &kp C_PREV  &kp C_VOL_DN  &bt BT_PRV      &none   &none   &none  &none  &none  &none
&trans  &none         &none       &none    &kp C_MUTE  &bt BT_CLR      &none   &none   &none  &none  &none  &none
                                 &trans        &trans   &kp SPACE    &kp RET  &trans  &trans
            >;
        };
    };
};
